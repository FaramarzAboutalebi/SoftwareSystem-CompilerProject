Source Program:
const k = 8, c = 7;
var x, y;
begin
  while x - y <= c do
    x := k + y;
  if x - 10 <> 7 then 
    x := c + x;
  if odd x * 3 - (y - 6) / x then
    y := c   
end.

Lexeme Table:
lexeme      token type
const       28
k           2
=           9
8           3
,           17
c           2
=           9
7           3
;           18
var         29
x           2
,           17
y           2
;           18
begin       21
while       25
x           2
-           5
y           2
<=          12
c           2
do          26
x           2
:=          20
k           2
+           4
y           2
;           18
if          23
x           2
-           5
10          3
<>          10
7           3
then        24
x           2
:=          20
c           2
+           4
x           2
;           18
if          23
odd         1
x           2
*           6
3           3
-           5
(           15
y           2
-           5
6           3
)           16
/           7
x           2
then        24
y           2
:=          20
c           2
end         22
.           19
Token List:
28 2 k 9 3 8 17 2 c 9 3 7 18 29 2 x 17 2 y 18 21 25 2 x 5 2 y 12 2 c 26 2 x 20 2 k 4 2 y 18 23 2 x 5 3 10 10 3 7 24 2 x 20 2 c 4 2 x 18 23 1 2 x 6 3 3 5 15 2 y 5 3 6 16 7 2 x 24 2 y 20 2 c 22 19 
